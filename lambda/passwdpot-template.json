{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Passwd Pot resources",
  "Parameters": {
    "LogzApi": {
      "Description": "logz.io api key",
      "Type": "String",
      "Default": ""
    },
    "S3Key": {
      "Type": "String",
      "Default": "passwdpot.zip"
    },
    "Debug": {
      "Type": "String",
      "Default": "0"
    },
    "ApiId": {
      "Description": "API Gateway App Id. E.g. 1yc6td9zjj",
      "Type": "String",
      "Default": ""
    },
    "PasswdPotDBUsername": {
      "Description": "DB username",
      "Type": "String",
      "Default": "root"
    },
    "PasswdPotDBMasterPassword": {
      "Description": "DB password",
      "Type": "String"
    },
    "PasswdPotDBPassword": {
      "Description": "DB password",
      "Type": "String"
    },
    "PasswdPotDBOptions": {
      "Description": "MySql golang driver options",
      "Type": "String",
      "Default": "tls=true&parseTime=true&loc=UTC&timeout=100ms"
    }
  },
  "Resources": {

    "PasswdPotVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.1.0.0/16"
      }
    },
    "PasswdPotSubnet": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
         "VpcId" : { "Ref" : "PasswdPotVPC" },
         "CidrBlock" : "10.1.1.0/24"
      }
   },
    "PasswdPotDBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow all to client host",
        "VpcId": {
          "Ref": "PasswdPotVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3306",
            "ToPort": "3306",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "PasswdPotDBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
         "DBSubnetGroupDescription" : "description",
         "SubnetIds" : [ {"Ref": "PasswdPotSubnet"}]
      }
   },
    "SecurityGroupIngress": {
      "Type" : "AWS::RDS::DBSecurityGroupIngress",
      "Properties" : {
       "CIDRIP": "0.0.0.0/0",
       "DBSecurityGroupName": {"Ref": "PasswdPotDBSecurityGroup"}
    },

    "DBSecurityGroup": {
      "Type" : "AWS::RDS::DBSecurityGroup",
      "Properties" :
      {
         "DBSecurityGroupIngress" : [{"Ref": "SecurityGroupIngress"}],
         "GroupDescription": "Allow all to client host"
      }
   },
    "PasswdPotDatabase": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "DatabaseName": "passwdpotcluster",
        "Engine": "aurora-mysql",
        "MasterUsername": "root",
        "MasterUserPassword": {
          "Ref": "PasswdPotDBMasterPassword"
        },
        "BackupRetentionPeriod": "1",
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName" : { "Ref" : "PasswdPotDBSubnetGroup" },
        "VpcSecurityGroupIds": [ {"Ref": "PasswdPotDBSecurityGroup" }]
      }
    },
    "PasswdPotDatabasePrimaryInstance": {
    "Type" : "AWS::RDS::DBInstance",
    "Properties" :  {
      "MultiAZ": false,
      "DBSubnetGroupName" : {
        "Ref" : "PasswdPotDBSubnetGroup"
      },
      "AvailabilityZone" : { "Fn::GetAtt" : [ "PasswdPotSubnet", "AvailabilityZone" ] },
      "PubliclyAccessible": true,
      "Engine": "aurora-mysql",
      "DBClusterIdentifier": {"Ref" :"PasswdPotDatabase"},
      "DBInstanceClass": "db.t2.small",
      "DBParameterGroupName": "default.aurora-mysql5.7",
      "VPCSecurityGroups": [
        {
          "Ref": "PasswdPotDBSecurityGroup"
        }
      ]
    } 
    },
    "PasswdPotLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "logs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "CreateEventPostLambda": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": "PasswdPotDatabase",
      "Properties": {
        "FunctionName": "passwdpot-create-event",
        "Handler": "handler",
        "Role": {
          "Fn::GetAtt": [
            "PasswdPotLambdaRole",
            "Arn"
          ]
        },
        "MemorySize": 128,
        "Environment": {
          "Variables": {
            "PASSWDPOT_DSN": {
              "Fn::Join": [
                "",
                [
                  "passwdpot:",
                  {
                    "Ref": "PasswdPotDBPassword"
                  },
                  "@tcp(",
                  {
                    "Fn::GetAtt": [
                      "PasswdPotDatabase",
                      "Endpoint.Address"
                    ]
                  },
                  ":", {
                  "Fn::GetAtt": [
                    "PasswdPotDatabase",
                     "Endpoint.Port"
                  ]
                },
                  ")/passwdpot?",
                  {
                    "Ref": "PasswdPotDBOptions"
                  }
                ]
              ]
            },
            "PASSWDPOT_DEBUG": {
              "Ref": "Debug"
            },
            "LOGZ": {
              "Ref": "LogzApi"
            }
          }
        },
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "passwdpot-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Ref": "S3Key"
          }
        },
        "Runtime": "go1.x",
        "Timeout": 2
      }
    },
    "CreateEventPostLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateEventPostLambda",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "PasswdPotRestApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "PasswdPotRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "DependsOn": "PasswdPotDatabase",
      "Properties": {
        "Name": "Passwdpot API Gateway"
      }
    },
    "EventModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "Event",
        "RestApiId": {
          "Ref": "PasswdPotRestApi"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Event",
          "type": "object",
          "additionalProperties": true,
          "properties": {
            "time": {
              "type": "number"
            },
            "user": {
              "type": "string"
            },
            "passwd": {
              "type": "string"
            },
            "remoteAddr": {
              "type": "string"
            },
            "remotePort": {
              "type": "number"
            },
            "remoteName": {
              "type": "string"
            },
            "remoteVersion": {
              "type": "string"
            },
            "originAddr": {
              "type": "string"
            },
            "application": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          },
          "required": [
            "time",
            "remoteAddr",
            "originAddr",
            "application",
            "protocol",
            "user"
          ]
        }
      }
    },
    "EventResponseModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "EventResponse",
        "RestApiId": {
          "Ref": "PasswdPotRestApi"
        },
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "EventResponse",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "number"
            }
          }
        }
      }
    },
    "EventResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "PasswdPotRestApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "PasswdPotRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "event"
      }
    },
    "EventPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "PasswdPotRestApi"
        },
        "ResourceId": {
          "Ref": "EventResource"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateEventPostLambda",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "$input.json('$.body')"
              },
              "StatusCode": 202
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{ \"event\": $input.json('$') ,   \"originAddr\": \"$context.identity.sourceIp\"}"
          }
        },
        "RequestModels": {
          "application/json": {
            "Ref": "EventModel"
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "EventResponseModel"
              }
            },
            "StatusCode": 202
          }
        ]
      }
    },
    "RestApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "PasswdPotRestApi"
        },
        "StageName": "v1"
      },
      "DependsOn": [
        "EventPost"
      ]
    }
  },
  "Outputs": {
    "LambdaArn": {
      "Value": {
        "Fn::GetAtt": [
          "CreateEventPostLambda",
          "Arn"
        ]
      }
    }
  }
}